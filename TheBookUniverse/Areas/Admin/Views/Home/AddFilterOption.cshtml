@using Models.Admin
@model FilterOptionsModel
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewData["Title"] = "Add new filter option";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-11 col-md-8 col-lg-6 col-xl-4">
            <div class="row text-start">
                <form asp-action="AddFilterOption" method="post">
                    @Html.AntiForgeryToken()
                    <h3 class="text-center">Add new filter option</h3>
                    <hr />
                    @if (TempData["ResponseMessage"] is not null && TempData["Response"] is not null)
                        {
                            if (TempData["Response"].Equals(false))
                            {
                                <div class="text-center text-danger">
                                    @TempData["ResponseMessage"]
                                </div>
                            }
                            else
                            {
                                <div class="text-center text-success">
                                    @TempData["ResponseMessage"]
                                </div>
                                <a asp-action="AddFilterOption" class="text-color-2">Add new filter option</a>
                            }
                        }
                     <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="Name" class="control-label text-secondary"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <br />
                        <div class="form-group" id="values-container">
                            <label asp-for="Values" class="control-label text-secondary"></label>

                            <div class="form-group input-group" id="added-values">
                    
                            </div>
                            <div class="input-group mb-3">
                            <input type="text" id="value" class="form-control" />
                                <button class="btn color-2" type="button" onclick="addValueField()" id="addValueButton" >Add value</button>
                            </div>
                        </div>
                        <div class="form-group text-center">
                            <input type="submit" value="Save" class="btn form-btn" />
                            <a href="@Url.Action("ViewFilterOptions")" class="btn btn-secondary">Cancel</a>
                        </div>
                 </form>
            </div>
        </div>
    </div>
</div>

<script>
    function addValueField() {
        var container = document.getElementById("added-values");
        var inputGroup = document.createElement("div");
        inputGroup.className = "input-group mb-3";
        var oldInputElement = document.getElementById("value");
        var oldValue = oldInputElement.value;
        var inputField = document.createElement("input");
        inputField.type = "text";
        inputField.name = "Values";
        inputField.className = "form-control border border-dark";
        inputField.value=oldValue;
        oldInputElement.value = "";
        var appendDiv = document.createElement("div");
        appendDiv.className = "input-group-append";
        var removeButton = document.createElement("button");
        removeButton.className = "btn btn-danger";
        removeButton.type = "button";
        removeButton.textContent = "Remove";
        removeButton.onclick = function () {
            container.removeChild(inputGroup);
        };
        appendDiv.appendChild(removeButton);
        inputGroup.appendChild(inputField);
        inputGroup.appendChild(appendDiv);
        container.appendChild(inputGroup);
    }

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
